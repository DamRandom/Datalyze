"use client";

import React, { useEffect, useState } from "react";
import { Line } from "react-chartjs-2";
import { Pie } from "react-chartjs-2";
import { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from "chart.js";

// Register chart.js components
ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);

const LSTMResults: React.FC = () => {
  const [isClient, setIsClient] = useState(false);

  // Ensure the component is only rendered on the client side
  useEffect(() => {
    setIsClient(true);
  }, []);

  // Sample data for line chart (predictions vs actual values)
  const lineData = {
    labels: ["Week 1", "Week 2", "Week 3", "Week 4", "Week 5"],
    datasets: [
      {
        label: "Predicted Values",
        data: [20, 25, 30, 35, 40],
        borderColor: "#1E293B",
        backgroundColor: "rgba(30, 41, 59, 0.2)",
        fill: true,
        tension: 0.3,
      },
      {
        label: "Actual Values",
        data: [18, 27, 32, 34, 38],
        borderColor: "#0284C7",
        backgroundColor: "rgba(2, 132, 199, 0.2)",
        fill: true,
        tension: 0.3,
      },
    ],
  };

  // Sample data for pie chart (distribution of model accuracy)
  const pieData = {
    labels: ["Correct Predictions", "Incorrect Predictions"],
    datasets: [
      {
        data: [85, 15],
        backgroundColor: ["#0284C7", "#93C5FD"],  // Colors adjusted to match site theme
        hoverOffset: 4,
      },
    ],
  };

  // Render only on the client side to prevent SSR mismatch
  if (!isClient) {
    return null; // Avoid rendering the component during SSR
  }

  return (
    <section className="py-12 px-6 bg-[#ffffff] text-[#333]">
      <div className="max-w-4xl mx-auto">
        <h2 className="text-3xl font-semibold mb-6 text-center">Results Visualization</h2>

        {/* Introduction */}
        <p className="text-lg leading-relaxed mb-6">
          The predictions generated by the LSTM model are visualized in an intuitive and informative manner to enable easy understanding of the model&apos;s performance. These visualizations include:
        </p>

        {/* Visualization Section */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-12">
          {/* Line Chart */}
          <div className="bg-white p-6 rounded-xl shadow-lg">
            <h3 className="text-xl font-semibold text-[#1E293B] mb-4">Predicted vs Actual Values</h3>
            <Line data={lineData} width={300} height={200} /> {/* Reduced size */}
          </div>

          {/* Pie Chart */}
          <div className="bg-white p-6 rounded-xl shadow-lg">
            <h3 className="text-xl font-semibold text-[#1E293B] mb-4">Prediction Accuracy</h3>
            <Pie data={pieData} width={250} height={250} /> {/* Reduced size */}
          </div>
        </div>

        {/* Additional Insights */}
        <p className="text-lg leading-relaxed mt-6">
          These visualizations help to better understand the performance of the LSTM model. The line chart highlights the trends over time, showing how closely the predicted values align with the actual values. The pie chart provides a quick overview of the model&apos;s accuracy, showcasing the percentage of correct predictions versus incorrect ones.
        </p>

        <p className="text-lg leading-relaxed mt-4">
          These insights assist users in making data-driven decisions by evaluating the model&apos;s effectiveness in forecasting future events.
        </p>
      </div>
    </section>
  );
};

export default LSTMResults;
